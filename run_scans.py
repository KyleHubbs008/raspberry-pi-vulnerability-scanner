import os
import subprocess
import nmap
import json

def run_nmap(target):
    output_path = os.getenv('OUTPUT_PATH', '.')
    nm = nmap.PortScanner()
    nm.scan(target, arguments='-A')
    with open(os.path.join(output_path, 'nmap_scan.txt'), 'w') as f:
        f.write(nm.csv())

def run_nikto(target):
    output_path = os.getenv('OUTPUT_PATH', '.')
    subprocess.run(['nikto', '-h', target, '-output', os.path.join(output_path, 'nikto_scan.txt')])

def run_openscap():
    output_path = os.getenv('OUTPUT_PATH', '.')
    subprocess.run(['oscap', 'xccdf', 'eval', '--report', os.path.join(output_path, 'openscap_report.html'), '/usr/share/openscap/scap-yml-0.1/scap-yml-0.1.xml'])

def run_lynis():
    output_path = os.getenv('OUTPUT_PATH', '.')
    subprocess.run(['lynis', 'audit', 'system', '--report-file', os.path.join(output_path, 'lynis_report.txt')])

def run_wapiti(target):
    output_path = os.getenv('OUTPUT_PATH', '.')
    subprocess.run(['wapiti', target, '-o', os.path.join(output_path, 'wapiti_report.html'), '-f', 'html'])

def main():
    config_path = os.getenv('CONFIG_PATH', '.')
    with open(os.path.join(config_path, 'config.json')) as config_file:
        config = json.load(config_file)
        target = config.get("target")

    if not target:
        print("Error: Target not specified in config file.")
        return

    print(f"Running Nmap scan on {target}")
    run_nmap(target)
    
    print(f"Running Nikto scan on {target}")
    run_nikto(target)
    
    print("Running OpenSCAP scan")
    run_openscap()
    
    print("Running Lynis scan")
    run_lynis()
    
    print(f"Running Wapiti scan on {target}")
    run_wapiti(target)
    
    print("Scans completed!")

if __name__ == "__main__":
    main()
